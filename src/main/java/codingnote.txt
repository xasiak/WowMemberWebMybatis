* 왜 마이바티스를 써야 하나요?
1. 자바코드에는 자바만 있게 하자 -> POJO

2. DAO에서 했었던 절차들을 마이바티스가 해준다.


* 마이바티스 동작 구조
1. mybatis-config.xml 파일에 DB접속정보, 쿼리문 위치 정보를 저장한다.

2. SqlSessionTemplate을 이용하여 SqlSession을 생성
   - mybatis-config.xml파일을 읽는데 Stream이 사용됨
   - 연결공장노동자가 연결공장을 만들고 연결공장은 연결을 만들었음.
   
3. 나머지는 원래 하던대로 하면 됨.
   a. JSP만들고
   b. Controller만들고 Service의 메소드 호출
   c. Service의 메소드는 연결 생성 후 DAO 호출 (DML의 경우 COMMIT/ROLLBACK) 후 Session 닫기)
   d. DAO의 메소드는 간결해짐. session을 통해서 실행할 쿼리문에 따라 적절한 메소드를 호출하고
      mapper.xml에 있는 쿼리문을 호출하여 실행함.
      ex) int result = session.insert("MemberMapper.inserMember", member); return result;
   e. mapper.xml의 해당 쿼리문에 가서 #{필드명 }으로 getter() 메소드를 대신하여 값을 세팅함.
      ex) <insert id="insertMember">INSERT INTO MEMBER_TBL VALUES(#{memberId }, ....) </insert>
      
23/08/04
구현했던 기능들
1. 회원가입
2. 회원탈퇴
3. 회원수정
4. 로그인
5. 회원 상세 조회(마이페이지)
----------------------------------------- 완료
*공지사항을 직접 만들어보자~!
1. 공지사항 등록
2. 공지사항 목록 조회(전체 조회)
3. 공지사항 상세 조회
4. 공지사항 삭제
5. 공지사항 수정(페이지 이동 후 수정)